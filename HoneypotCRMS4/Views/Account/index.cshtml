@* @model HoneypotCRMS4.Models.LoginModel

@{
    Layout = null; // Specify the layout if you have one
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>CRM login</title>
    <link href="@Url.Content("~/css/login.css")" rel="stylesheet">
</head>
<body>
    <!-- container div -->
    <div class="container">
        <!-- upper button section to select the login or signup form -->
        <div class="slider"></div>
        <div class="btn">
            <button class="login">Login</button>
            <button class="signup">Signup</button>
        </div>
        <!-- Form section that contains the login and the signup form -->
        <div class="form-section">
            <!-- login form -->
            <div class="login-box">
                <input class="email ele" placeholder="youremail@email.com" type="email">
                <input class="password ele" placeholder="password" type="password">
                <button class="clkbtn login-btn">Login</button>
            </div>
            <!-- signup form -->
            <div class="signup-box">
                <input class="name ele" placeholder="Enter your name" type="text">
                <input class="email ele" placeholder="youremail@email.com" type="email">
                <input class="password ele" placeholder="password" type="password">
                <input class="password ele" placeholder="Confirm password" type="password">
                <button class="clkbtn signup-btn">Signup</button>
            </div>
        </div>
    </div>
    <script src="@Url.Content("~/js/login.js")"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Get references to the login and signup buttons
            const loginButton = document.querySelector('.login-btn');
            const signupButton = document.querySelector('.signup-btn');

            // Add event listeners to handle button clicks
            loginButton.addEventListener('click', () => {
                // Redirect to a different action on login
                window.location.href = '@Url.Action("Index", "Home")';
            });

            signupButton.addEventListener('click', () => {
                // Redirect to a different action on signup
                window.location.href = '@Url.Action("Index", "Home")';
            });
        });
    </script>
</body>
</html>
 *@
 @model HoneypotCRMS4.Models.LoginModel
 @{
    // Layout = "~/Views/Shared/_LoginLayout.cshtml";
 }


	<link rel="stylesheet" href="~/css/login.css" asp-append-version="true" />
    <section class="page-content">
        <article class="board">
            <h2>Login</h2>


            <div class="form">
                @using (Html.BeginForm("Index", "account", FormMethod.Post, new { @class = "form" }))
                {
                    <div class="form-element">
                        <label for="client-name">Email</label>
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(model => model.Username, new { @class = " email ele" })
                    </div>
                    <div class="form-element">
                        <label for="client-email">Password</label>
                        @Html.ValidationMessageFor(model => model.Password, "asdfasdfasd", new { @class = "text-danger" })
                        @Html.PasswordFor(model => model.Password, new { @class = "password ele" })
                    </div>
                     <button class="clkbtn login-btn" type="Submit">Login</button>
                }
            </div>

        </article>
    </section>


